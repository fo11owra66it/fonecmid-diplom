
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// +++ ВКМ Телицин С.Л. (Заполнение Реализации товаров и услуг)
	ВКМ_ДобавитьКомандуЗаполнить();
	// --- ВКМ Телицин С.Л. (Заполнение Реализации товаров и услуг)
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
// +++ ВКМ Телицин С.Л. (Заполнение Реализации товаров и услуг)
&НаКлиенте
Процедура ВКМ_Заполнить(Команда)
	ВКМ_ЗаполнитьНаСервере();
КонецПроцедуры
// --- ВКМ Телицин С.Л. (Заполнение Реализации товаров и услуг)

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// +++ ВКМ Телицин С.Л. (Заполнение Реализации товаров и услуг)
&НаСервере
Процедура ВКМ_ДобавитьКомандуЗаполнить()
	
	Команда = ЭтаФорма.Команды.Добавить("Заполнить");
	Команда.Заголовок = "Заполнить";
	Команда.Действие  = "ВКМ_Заполнить";
	
	КнопкаФормы = Элементы.Добавить("Заполнить", Тип("КнопкаФормы"), КоманднаяПанель);
	КнопкаФормы.ИмяКоманды = "Заполнить";
	КнопкаФормы.Вид 	   = ВидКнопкиФормы.ОбычнаяКнопка;
	
КонецПроцедуры

&НаСервере
Процедура ВКМ_ЗаполнитьНаСервере()
		
	Если Не ЗначениеЗаполнено(Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить()) Тогда
		ОбщегоНазначения.СообщитьПользователю("Не заполнена константа ""Номенклатура Работы специалиста"".");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить()) Тогда
		ОбщегоНазначения.СообщитьПользователю("Не заполнена константа ""Номенклатура Абонентская плата"".");
		Возврат;
	КонецЕсли;

	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор, "ВидДоговора, 
	|ВКМ_ДатаНачалаДействияДоговора, ВКМ_ДатаОкончанияДействияДоговора"); 
	
	Если РеквизитыДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание Тогда
		ОбщегоНазначения.СообщитьПользователю("Договор не является договором на абонентское обслуживание. Выберите другой договор.");
		Возврат;
	КонецЕсли;
		
	Если РеквизитыДоговора.ВКМ_ДатаНачалаДействияДоговора > Объект.Дата 
		ИЛИ РеквизитыДоговора.ВКМ_ДатаОкончанияДействияДоговора < Объект.Дата Тогда
		ОбщегоНазначения.СообщитьПользователю("Дата документа не соответствует периоду действия договора. Выберите другой договор.");
		Возврат;
	КонецЕсли;
		
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		ДокументОбъект.ВКМ_ВыполнитьАвтозаполнение();
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

// --- ВКМ Телицин С.Л. (Заполнение Реализации товаров и услуг)
#КонецОбласти

#КонецОбласти
